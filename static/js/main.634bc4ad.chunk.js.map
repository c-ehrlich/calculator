{"version":3,"sources":["store.js","media/AGExtended.woff","media/AGExtended.woff2","media/AGRegular.woff","media/AGRegular.woff2","media/D7Mono.woff","media/D7Mono.woff2","media/fonts.js","components/buttons/Button.jsx","media/PlusMinusIcon.svg","components/buttons/Buttons.jsx","media/bg-2400.jpg","media/CalcBG.png","components/Container.jsx","components/display/DisplayBorder.jsx","components/display/Display.jsx","media/BraunLogo.svg","styles.js","components/Logo.jsx","components/mode/ModeToggle.jsx","components/mode/ModeToggleContainer.jsx","components/power/PowerButton.jsx","components/power/Power.jsx","layout/SettingsRow.jsx","components/modal/ModalButton.jsx","components/modal/FullScreenModal.jsx","components/modal/InfoModal.jsx","App.js","index.js","utils.js"],"names":["useStore","set","modalOpen","openModal","closeModal","display","inputNum","evalString","currentCalc","result","lastInput","power","powerOn","displayLeftSide","powerOff","setTimeout","memory","haveMemory","setdisplayLeftSide","sciMode","sciModeOn","sciModeOff","inputClear","state","handleInputClear","inputNumber","number","handleInputNum","num","inputDecimal","handleInputDecimal","inputPlus","performArithmeticOperationRegularMode","operationToPerform","inputMinus","inputTimes","inputDivideBy","inputEquals","performEqualsRegularMode","sciInputPlus","performArithmeticOperationSciMode","sciInputMinus","sciInputTimes","sciInputDivideBy","sciInputEquals","performEqualsSciMode","inputSqrt","handleInputSqrt","inputPercent","handleInputPercent","inputInverse","handleInputInverse","inputNegative","toggleNegative","inputMMinus","handleInputMMinus","inputMPlus","handleInputMPlus","inputMRecall","inputMClear","create","createGlobalStyle","AGExtendedWoff2","AGExtendedWoff","AGRegularWoff2","AGRegularWoff","D7MonoWoff2","D7MonoWoff","StyledButton","styled","button","Button","props","id","passDownId","className","type","onClick","clickFn","ref","passdownRef","children","StyledButtons","div","ButtonImage","img","WhiteDot","Buttons","handleKeyDown","e","key","match","toLowerCase","useEffect","document","addEventListener","removeEventListener","src","plusMinusIcon","alt","icon","faSquareRootAlt","faDivide","faPercent","faTimes","faMinus","faEquals","faPlus","Background","padding","pageBG","CalculatorOuterContainer","CalculatorInnerContainer","calcBG","Container","StyledDisplayBorder","StyledDisplay","DisplayInner","DisplayBorder","DisplayMainText","span","DisplaySmallText","DisplayLeft","Display","embossedText","css","embossedTextSvg","StyledLogo","LogoImage","Logo","braunLogo","VerticalSwitch","input","VerticalSwitchLabel","label","VerticalSwitchToggle","i","VerticalSwitchToggleHandle","ModeToggle","htmlFor","preventDefault","defaultChecked","ModeToggleContainerOuter","Labels","Label","LabelText","LabelDot","ModeToggleContainer","PowerButtonArea","PowerButtonBigDot","StyledPowerButton","PowerButton","onoff","StyledPowerContainer","Power","StyledSettingsRow","SettingsRow","StyledModalButton","ModalButton","FullScreenModalBackground","StyledFullScreenModal","FullScreenModal","stopPropagation","ModalHeader","h1","ModalParagraph","ModalTable","table","ModalCloseButton","InfoModal","href","StyledApp","App","ReactDOM","render","StrictMode","getElementById","countDecimals","toString","includes","Number","split","length","getArithmeticCharFromWord","word","console","log","getArithmeticDisplayCharFromWord","returnNum","returnValue","processNumberForDisplay","inputNumNumber","slice","evalNum","safeEval","evalOperator","percentNum","squareRootCalculationMath","operator","displayOperator","concat","newResult","newEvalString","inputNumString","negativeModifier","decimal","replace","inputExpression","safeInput","safeOutput","eval","error","sqrt","Math","isNaN"],"mappings":"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","file":"static/js/main.634bc4ad.chunk.js","sourcesContent":["import create from \"zustand\";\n\nimport {\n  handleInputClear,\n  handleInputDecimal,\n  handleInputInverse,\n  handleInputMMinus,\n  handleInputMPlus,\n  handleInputNum,\n  handleInputPercent,\n  handleInputSqrt,\n  performArithmeticOperationRegularMode,\n  performArithmeticOperationSciMode,\n  performEqualsRegularMode,\n  performEqualsSciMode,\n  toggleNegative,\n} from \"./utils\";\n\nlet useStore = (set) => ({\n  /**\n   * UI\n   */\n  modalOpen: false,\n  openModal: () => set({ modalOpen: true }),\n  closeModal: () => set({ modalOpen: false }),\n\n  display: \"0\",\n\n  /*\n   * LOGIC\n   */\n  inputNum: \"0\",\n  evalString: \"\",\n  currentCalc: \"\",\n  result: \"0\",\n  lastInput: \"\",\n\n  /*\n   * POWER FUNCTIONS\n   */\n  power: true,\n  powerOn: () => {\n    set({\n      power: true,\n      display: \"0\",\n      displayLeftSide: \"\",\n      currentCalc: \"\",\n      inputNum: \"0\",\n      result: \"0\",\n    });\n  },\n  powerOff: () => {\n    set({\n      power: false,\n    });\n    setTimeout(\n      () =>\n        set({\n          currentCalc: 0,\n          inputNum: 0,\n          display: \"0\",\n          displayLeftSide: \"\",\n          memory: \"0\",\n          haveMemory: false,\n        }),\n      200\n    );\n  },\n\n  /*\n   * DISPLAY FUNCTIONS\n   * Maybe we can get rid of these and instead just have a function in\n   * Display.jsx that uses the other values to decide what to display?\n   */\n  displayLeftSide: \"\",\n  setdisplayLeftSide: (displayLeftSide) =>\n    set({ displayLeftSide: displayLeftSide }),\n\n  /*\n   * SCIENTIFIC MODE\n   */\n  sciMode: false,\n  sciModeOn: () => {\n    set({\n      currentCalc: \"0\",\n      inputNum: \"0\",\n      result: \"0\",\n      display: \"0\",\n      displayLeftSide: \"\",\n      sciMode: true,\n      evalString: \"\",\n    });\n  },\n  sciModeOff: () => {\n    set({\n      currentCalc: \"0\",\n      inputNum: \"0\",\n      result: \"0\",\n      display: \"0\",\n      displayLeftSide: \"\",\n      sciMode: false,\n      evalString: \"\",\n    });\n  },\n\n  /*\n   * CE/C Button\n   */\n  inputClear: () => {\n    set((state) => ({\n      ...handleInputClear({\n        lastInput: state.lastInput,\n      }),\n    }));\n  },\n\n  /*\n   * Number Input\n   */\n  inputNumber: (number) => {\n    set((state) => ({\n      ...handleInputNum({\n        num: number,\n        inputNum: state.inputNum,\n        lastInput: state.lastInput,\n      }),\n    }));\n  },\n\n  /*\n   * DECIMAL POINT INPUT\n   */\n  inputDecimal: () => {\n    set((state) => ({\n      ...handleInputDecimal(state.inputNum),\n    }));\n  },\n\n  /*\n   * Plus Minus Times DivideBy Equals - Regular Mode\n   */\n  inputPlus: () => {\n    set((state) => ({\n      ...performArithmeticOperationRegularMode({\n        inputNum: state.inputNum,\n        evalString: state.evalString,\n        operationToPerform: \"plus\",\n        lastInput: state.lastInput,\n        result: state.result,\n      }),\n    }));\n  },\n  inputMinus: () => {\n    set((state) => ({\n      ...performArithmeticOperationRegularMode({\n        inputNum: state.inputNum,\n        evalString: state.evalString,\n        operationToPerform: \"minus\",\n        lastInput: state.lastInput,\n        result: state.result,\n      }),\n    }));\n  },\n  inputTimes: () => {\n    set((state) => ({\n      ...performArithmeticOperationRegularMode({\n        inputNum: state.inputNum,\n        evalString: state.evalString,\n        operationToPerform: \"times\",\n        lastInput: state.lastInput,\n        result: state.result,\n      }),\n    }));\n  },\n  inputDivideBy: () => {\n    set((state) => ({\n      ...performArithmeticOperationRegularMode({\n        inputNum: state.inputNum,\n        evalString: state.evalString,\n        operationToPerform: \"divideby\",\n        lastInput: state.lastInput,\n        result: state.result,\n      }),\n    }));\n  },\n  inputEquals: () => {\n    set((state) => ({\n      ...performEqualsRegularMode({\n        inputNum: state.inputNum,\n        evalString: state.evalString,\n        lastInput: state.lastInput,\n      }),\n    }));\n  },\n\n  /*\n   *\n   * Plus Minus Times DivideBy Equals - SCIENTIFIC MODE\n   *\n   */\n  sciInputPlus: () =>\n    set((state) => ({\n      ...performArithmeticOperationSciMode({\n        evalString: state.evalString,\n        inputNum: state.inputNum,\n        lastInput: state.lastInput,\n        operationToPerform: \"plus\",\n      }),\n    })),\n  sciInputMinus: () =>\n    set((state) => ({\n      ...performArithmeticOperationSciMode({\n        evalString: state.evalString,\n        inputNum: state.inputNum,\n        lastInput: state.lastInput,\n        operationToPerform: \"minus\",\n      }),\n    })),\n  sciInputTimes: () =>\n    set((state) => ({\n      ...performArithmeticOperationSciMode({\n        evalString: state.evalString,\n        inputNum: state.inputNum,\n        lastInput: state.lastInput,\n        operationToPerform: \"times\",\n      }),\n    })),\n  sciInputDivideBy: () =>\n    set((state) => ({\n      ...performArithmeticOperationSciMode({\n        evalString: state.evalString,\n        inputNum: state.inputNum,\n        lastInput: state.lastInput,\n        operationToPerform: \"divideby\",\n      }),\n    })),\n  sciInputEquals: () =>\n    set((state) => ({\n      ...performEqualsSciMode({\n        evalString: state.evalString,\n        inputNum: state.inputNum,\n        lastInput: state.lastInput,\n      })\n    })),\n\n  /*\n   * In Place Calculations\n   */\n  inputSqrt: () => {\n    set((state) => ({\n      ...handleInputSqrt({\n        inputNum: state.inputNum,\n        lastInput: state.lastInput,\n        result: state.result,\n      }),\n    }));\n  },\n  inputPercent: () => {\n    set((state) => ({\n      ...handleInputPercent({\n        inputNum: state.inputNum,\n        evalString: state.evalString,\n        sciModeOn: state.sciModeOn,\n      }),\n    }));\n  },\n  inputInverse: () => {\n    set((state) => ({\n      ...handleInputInverse({\n        inputNum: state.inputNum,\n        currentCalc: state.currentCalc,\n        lastInput: state.lastInput,\n        result: state.result,\n      }),\n    }));\n  },\n  inputNegative: () => {\n    set((state) => ({\n      ...toggleNegative({\n        inputNum: state.inputNum,\n        result: state.result,\n        lastInput: state.lastInput,\n      }),\n    }));\n  },\n\n  /*\n   * Memory Functions\n   */\n  memory: \"0\",\n  haveMemory: false,\n  inputMMinus: () =>\n    set((state) => ({\n      ...handleInputMMinus({\n        inputNum: state.inputNum,\n        lastInput: state.lastInput,\n        memory: state.memory,\n        result: state.result,\n      }),\n    })),\n  inputMPlus: () =>\n    set((state) => ({\n      ...handleInputMPlus({\n        inputNum: state.inputNum,\n        lastInput: state.lastInput,\n        memory: state.memory,\n        result: state.result,\n      }),\n    })),\n  inputMRecall: () =>\n    set((state) => ({\n      inputNum: state.memory,\n      display: state.memory,\n      lastInput: \"mrecall\",\n    })),\n  inputMClear: () =>\n    set({\n      memory: \"0\",\n      haveMemory: false,\n      lastInput: \"mclear\",\n    }),\n});\n\nuseStore = create(useStore);\nexport default useStore;\n","export default __webpack_public_path__ + \"static/media/AGExtended.429622f0.woff\";","export default __webpack_public_path__ + \"static/media/AGExtended.44f55f8d.woff2\";","export default __webpack_public_path__ + \"static/media/AGRegular.a0b24cb9.woff\";","export default __webpack_public_path__ + \"static/media/AGRegular.0321b98f.woff2\";","export default __webpack_public_path__ + \"static/media/D7Mono.cea5d881.woff\";","export default __webpack_public_path__ + \"static/media/D7Mono.aaf571fa.woff2\";","import { createGlobalStyle } from \"styled-components\";\n\nimport AGExtendedWoff from \"./AGExtended.woff\";\nimport AGExtendedWoff2 from \"./AGExtended.woff2\";\nimport AGRegularWoff from \"./AGRegular.woff\";\nimport AGRegularWoff2 from \"./AGRegular.woff2\";\nimport D7MonoWoff from \"./D7Mono.woff\";\nimport D7MonoWoff2 from \"./D7Mono.woff2\";\n\nexport default createGlobalStyle`\n  @font-face {\n    font-family: 'AGExtended';\n    src: local('AG Extended'), local('AGExtended'),\n    url(${AGExtendedWoff2}) format('woff2'),\n    url(${AGExtendedWoff}) format('woff');\n    font-weight: 300;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: 'AGRegular';\n    src: local('AG Regular'), local('AGRegular'),\n    url(${AGRegularWoff2}) format('woff2'),\n    url(${AGRegularWoff}) format('woff');\n    font-weight: 300;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: 'D7Mono';\n    src: local('D7 Mono'), local('D7 Mono'),\n    url(${D7MonoWoff2}) format('woff2'),\n    url(${D7MonoWoff}) format('woff');\n    font-weight: 300;\n    font-style: normal;\n  }\n`;\n","import styled from \"styled-components\";\n\nconst StyledButton = styled.button`\n  display: inline-block;\n  position: relative;\n\n  width: 48px;\n  height: 48px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid black;\n  font-family: \"AGRegular\";\n  white-space: nowrap;\n  border-radius: 50%;\n  /* !!!! the yellow buttons have their own shadows */\n  box-shadow: inset 17px 24px 40px -30px rgba(255, 255, 255, 0.4),\n    inset 6px 9px 5px -10px rgba(255, 255, 255, 0.3),\n    4px 7px 7px rgba(0, 0, 0, 0.3), 1.5px 3px 7px rgba(0, 0, 0, 0.6);\n  cursor: pointer;\n\n  transition: all 0.1s ease-in-out;\n\n  &:hover {\n    box-shadow: inset 17px 24px 40px -30px rgba(255, 255, 255, 0.4),\n      inset 6px 9px 5px -10px rgba(255, 255, 255, 0.3),\n      4px 7px 7px rgba(0, 0, 0, 0.3), 1.5px 3px 7px rgba(0, 0, 0, 0.6);\n  }\n\n  &.black {\n    background-color: black;\n    color: white;\n    font-size: 24px;\n\n    &:active {\n      box-shadow: inset 7px 7px 20px rgba(0, 0, 0, 0.9),\n        inset -7px -7px 20px rgba(255, 255, 255, 0.4);\n      padding-top: 2.5px;\n    }\n  }\n\n  &.brown {\n    background-color: rgb(54, 20, 2);\n    color: white;\n    font-size: 17px;\n\n    &:active {\n      box-shadow: inset 7px 7px 20px rgba(26, 9, 1, 0.9),\n        inset -7px -7px 20px rgba(255, 255, 255, 0.4);\n      padding-top: 3px;\n    }\n  }\n\n  &.green {\n    background-color: rgb(0, 46, 19);\n    color: white;\n    font-size: 20px;\n\n    &:active {\n      box-shadow: inset 7px 7px 20px rgba(0, 28, 12, 0.9),\n        inset -7px -7px 20px rgba(4, 145, 65, 0.5);\n      padding-top: 2.5px;\n    }\n  }\n\n  &.yellow {\n    background-color: rgb(217, 145, 0);\n    color: black;\n    font-size: 18px;\n    box-shadow: inset 17px 24px 40px -30px rgba(255, 255, 255, 0.9),\n      inset 6px 9px 5px -10px rgba(255, 255, 255, 0.5),\n      4px 7px 7px rgba(0, 0, 0, 0.2), 1.5px 3px 7px rgba(0, 0, 0, 0.5);\n\n    &:active {\n      box-shadow: inset 7px 7px 20px rgba(60, 30, 0, 0.7),\n        inset -7px -7px 25px rgba(255, 255, 255, 0.8);\n      padding-top: 3px;\n    }\n  }\n`;\n\nconst Button = (props) => {\n  return (\n    <StyledButton\n      id={props.passDownId}\n      className={`${props.type}`}\n      onClick={props.clickFn && props.clickFn}\n      ref={props.passdownRef}\n    >\n      {props.children}\n    </StyledButton>\n  );\n};\n\nexport default Button;\n","export default __webpack_public_path__ + \"static/media/PlusMinusIcon.ede906ae.svg\";","import { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport useStore from \"../../store\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faDivide,\n  faEquals,\n  faMinus,\n  faPercent,\n  faPlus,\n  faSquareRootAlt,\n  faTimes,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport Button from \"./Button\";\n\nimport plusMinusIcon from \"../../media/PlusMinusIcon.svg\";\n\nconst StyledButtons = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  gap: 16px;\n`;\n\nconst ButtonImage = styled.img`\n  width: 65%;\n  height: 65%;\n`;\n\nconst WhiteDot = styled.div`\n  width: 6px;\n  height: 6px;\n  border: none;\n  background-color: white;\n  border-radius: 50%;\n`;\n\nconst Buttons = () => {\n  // calculator functions that are the same in reg and sci modes\n  const sciMode = useStore((state) => state.sciMode);\n  const inputNumber = useStore((state) => state.inputNumber);\n  const inputInverse = useStore((state) => state.inputInverse);\n  const inputClear = useStore((state) => state.inputClear);\n  const inputSqrt = useStore((state) => state.inputSqrt);\n  const inputPercent = useStore((state) => state.inputPercent);\n  const inputDecimal = useStore((state) => state.inputDecimal);\n  const inputNegative = useStore((state) => state.inputNegative);\n\n  // calculator functions that are different in reg and sci modes\n  const inputPlus = useStore((state) =>\n    sciMode ? state.sciInputPlus : state.inputPlus\n  );\n  const inputMinus = useStore((state) =>\n    sciMode ? state.sciInputMinus : state.inputMinus\n  );\n  const inputTimes = useStore((state) =>\n    sciMode ? state.sciInputTimes : state.inputTimes\n  );\n  const inputDivideBy = useStore((state) =>\n    sciMode ? state.sciInputDivideBy : state.inputDivideBy\n  );\n  const inputEquals = useStore((state) =>\n    sciMode ? state.sciInputEquals : state.inputEquals\n  );\n\n  const inputMPlus = useStore((state) => state.inputMPlus);\n  const inputMMinus = useStore((state) => state.inputMMinus);\n  const inputMRecall = useStore((state) => state.inputMRecall);\n  const inputMClear = useStore((state) => state.inputMClear);\n\n  const handleKeyDown = (e) => {\n    if (e.key.match(/\\d/)) {\n      inputNumber(e.key);\n    } else {\n      switch (e.key.toLowerCase()) {\n        case \".\":\n          inputDecimal();\n          break;\n        case \"+\":\n          inputPlus();\n          break;\n        case \"-\":\n          inputMinus();\n          break;\n        case \"*\":\n          inputTimes();\n          break;\n        case \"/\":\n          inputDivideBy();\n          break;\n        case \"=\":\n        case \"enter\":\n          inputEquals();\n          break;\n        case \"c\":\n        case \"backspace\":\n          inputClear();\n          break;\n        case \"s\":\n          inputSqrt();\n          break;\n        case \"p\":\n        case \"%\":\n          inputPercent();\n          break;\n        case \"i\":\n          inputInverse();\n          break;\n        case \"n\":\n          inputNegative();\n          break;\n        case \"q\":\n          inputMPlus();\n          break;\n        case \"w\":\n          inputMMinus();\n          break;\n        case \"e\":\n          inputMRecall();\n          break;\n        case \"r\":\n          inputMClear();\n          break;\n        default:\n          break;\n      }\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  });\n\n  return (\n    <StyledButtons>\n      <Button type=\"green\" clickFn={inputMPlus}>\n        <span>M +</span>\n      </Button>\n      <Button type=\"green\" clickFn={inputMMinus}>\n        M –\n      </Button>\n      <Button type=\"green\" clickFn={inputMRecall}>\n        MR\n      </Button>\n      <Button type=\"green\" clickFn={inputMClear}>\n        MC\n      </Button>\n      <Button type=\"green\" clickFn={inputNegative}>\n        <ButtonImage src={plusMinusIcon} alt=\"+/-\" />\n      </Button>\n      <Button type=\"brown\" clickFn={inputSqrt}>\n        <FontAwesomeIcon icon={faSquareRootAlt} />\n      </Button>\n      <Button type=\"black\" clickFn={() => inputNumber(7)}>\n        7\n      </Button>\n      <Button type=\"black\" clickFn={() => inputNumber(8)}>\n        8\n      </Button>\n      <Button type=\"black\" clickFn={() => inputNumber(9)}>\n        9\n      </Button>\n      <Button type=\"brown\" clickFn={inputDivideBy}>\n        <FontAwesomeIcon icon={faDivide} />\n      </Button>\n      <Button type=\"brown\" clickFn={inputPercent}>\n        <FontAwesomeIcon icon={faPercent} />\n      </Button>\n      <Button type=\"black\" clickFn={() => inputNumber(4)}>\n        4\n      </Button>\n      <Button type=\"black\" clickFn={() => inputNumber(5)}>\n        5\n      </Button>\n      <Button type=\"black\" clickFn={() => inputNumber(6)}>\n        6\n      </Button>\n      <Button type=\"brown\" clickFn={inputTimes}>\n        <FontAwesomeIcon icon={faTimes} />\n      </Button>\n      <Button type=\"brown\" clickFn={inputInverse}>\n        <span>\n          X<sup>-1</sup>\n        </span>\n      </Button>\n      <Button type=\"black\" clickFn={() => inputNumber(1)}>\n        1\n      </Button>\n      <Button type=\"black\" clickFn={() => inputNumber(2)}>\n        2\n      </Button>\n      <Button type=\"black\" clickFn={() => inputNumber(3)}>\n        3\n      </Button>\n      <Button type=\"brown\" clickFn={inputMinus}>\n        <FontAwesomeIcon icon={faMinus} />\n      </Button>\n      <Button type=\"brown\" clickFn={inputClear}>\n        <span>CE</span>\n        <span>C</span>\n      </Button>\n      <Button type=\"black\" clickFn={() => inputNumber(0)}>\n        0\n      </Button>\n      {/* TODO put a circular div in here instead */}\n      <Button type=\"brown\" clickFn={inputDecimal}>\n        <WhiteDot />\n      </Button>\n      <Button type=\"yellow\" clickFn={() => inputEquals()}>\n        <FontAwesomeIcon icon={faEquals} />\n      </Button>\n      <Button type=\"brown\" clickFn={inputPlus}>\n        <FontAwesomeIcon icon={faPlus} />\n      </Button>\n    </StyledButtons>\n  );\n};\n\nexport default Buttons;\n","export default __webpack_public_path__ + \"static/media/bg-2400.dcd36f0f.jpg\";","export default __webpack_public_path__ + \"static/media/CalcBG.253161ac.png\";","import styled from \"styled-components\";\nimport pageBG from \"../media/bg-2400.jpg\";\nimport calcBG from \"../media/CalcBG.png\";\n\nconst padding = 16;\n\nconst Background = styled.div`\n  height: calc(100vh - ${padding * 2}px); /* compensate for padding */\n  width: calc(100vw - ${padding * 2}px); /* compensate for padding */\n  overflow: scroll;\n  display: flex;\n  color: red;\n  padding: ${padding}px;\n  background: url(${pageBG}) no-repeat center center fixed;\n  -webkit-background-size: cover;\n  -moz-background-size: cover;\n  -o-background-size: cover;\n  background-size: cover;\n`;\n\nconst CalculatorOuterContainer = styled.div`\n  border-left: 1.5px solid rgb(50, 50, 50);\n  border-top: 1.5px solid rgb(50, 50, 50);\n  border-right: 1px solid rgb(20, 20, 20);\n  border-bottom: 1px solid rgb(20, 20, 20);\n  background: rgb(246, 246, 246);\n  background: linear-gradient(\n    120.5deg,\n    rgba(62, 62, 62, 1) 0.5%,\n    white 1.3%,\n    white 46.5%,\n    rgba(62, 62, 62, 1) 50.5%,\n    rgba(33, 33, 33, 1) 54.5%\n  );\n  padding: 4px;\n  margin: auto;\n  border-top-left-radius: 12px;\n  border-top-right-radius: 12px;\n  border-bottom-left-radius: 48px;\n  border-bottom-right-radius: 48px;\n  box-shadow: \n    2px 2px 5px 2px rgba(0, 0, 0, 0.7),\n    4px 7px 5px 5px rgba(0, 0, 0, 0.5),\n    5px 10px 5px 10px rgba(0, 0, 0, 0.2),\n    inset 0 0 3px 3px rgba(0, 0, 0, 0.25);\n`;\n\nconst CalculatorInnerContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n\n  padding: 48px 32px;\n\n  border-top-left-radius: 6px;\n  border-top-right-radius: 6px;\n  border-bottom-left-radius: 44px;\n  border-bottom-right-radius: 44px;\n  box-shadow: 0 0 3px 3px rgba(0, 0, 0, 0.5);\n\n  ${\"\" /* created with https://www.cssmatic.com/noise-texture */}\n  background-image: url(${calcBG});\n  background-repeat: repeat;\n`;\n\nconst Container = (props) => {\n  return (\n    <Background>\n      <CalculatorOuterContainer>\n        <CalculatorInnerContainer>{props.children}</CalculatorInnerContainer>\n      </CalculatorOuterContainer>\n    </Background>\n  );\n};\n\nexport default Container;\n","import styled from \"styled-components\";\nimport useStore from \"../../store\";\n\nconst StyledDisplayBorder = styled.div`\n  border-top: 1px solid rgba(0, 0, 0, 0.9);\n  border-bottom: 1px solid rgba(0, 0, 0, 0.9);\n  border-left: 1px solid rgba(0, 0, 0, 0.7);\n  border-right: 1px solid rgba(0, 0, 0, 0.7);\n  border-radius: 4px;\n  box-shadow: 0 0 3px -1px rgba(0, 0, 0, 0.9);\n`;\n\nconst StyledDisplay = styled.div`\n  width: 100%;\n  box-sizing: border-box;\n  border: 3px solid red;\n  background-color: rgb(154, 159, 134);\n  display: flex;\n  justify-content: flex-end;\n  padding: 8px 24px;\n\n  border-top: 12px inset rgba(0, 0, 0, 0.9);\n  border-left: 8px inset rgba(0, 0, 0, 0.8);\n  border-bottom: 24px inset rgba(0, 0, 0, 0.7);\n  border-right: 8px inset rgba(0, 0, 0, 0.8);\n\n  box-shadow: inset 0px 0px 5px -2px rgba(0, 0, 0, 0.9);\n`;\n\nconst DisplayInner = styled.div`\n  width: 100%;\n  background-color: rgb(106, 117, 93);\n  display: flex;\n  justify-content: flex-end;\n  padding: 6px 12px 2px 12px;\n  border-radius: 8px;\n  box-shadow: inset 0px 3px 8px -2px rgba(0, 0, 0, 0.9);\n\n  transition: 0.1s ease-in;\n\n  display: flex;\n  justify-content: space-between;\n\n  &.power {\n    background-color: rgb(200, 214, 183);\n  }\n`;\n\nconst DisplayBorder = (props) => {\n  const power = useStore((state) => state.power);\n\n  return (\n    <StyledDisplayBorder>\n      <StyledDisplay>\n        <DisplayInner className={power && \"power\"}>\n          {props.children}\n        </DisplayInner>\n      </StyledDisplay>\n    </StyledDisplayBorder>\n  );\n};\n\nexport default DisplayBorder;\n","import useStore from \"../../store\";\nimport styled from \"styled-components\";\nimport DisplayBorder from \"./DisplayBorder\";\n\nconst DisplayMainText = styled.span`\n  margin: 0;\n  padding: 0;\n  color: rgb(106, 117, 93);\n  font-family: \"D7Mono\";\n  font-size: 36px;\n  height: 32px;\n\n  display: flex;\n  align-items: &.power {\n    color: rgba(0, 0, 0, 0.55);\n  }\n`;\n\nconst DisplaySmallText = styled.span`\n  margin: 0;\n  padding: 0;\n  font-family: \"D7Mono\";\n  color: rgb(106, 117, 93);\n  font-size: 14px;\n  height: 14px;\n`;\n\nconst DisplayLeft = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n  margin: 2px 0;\n`;\n\nconst Display = () => {\n  const power = useStore((state) => state.power);\n  const displayLeftSide = useStore((state) => state.displayLeftSide);\n  const haveMemory = useStore((state) => state.haveMemory);\n\n  const display = useStore((state) => state.display);\n\n  return (\n    <DisplayBorder>\n      <DisplayLeft>\n        <DisplaySmallText className={power && \"power\"}>\n          {displayLeftSide}\n        </DisplaySmallText>\n        <DisplaySmallText className={!haveMemory && \"hidden\"}>\n          {haveMemory && \"M\"}\n        </DisplaySmallText>\n      </DisplayLeft>\n      <DisplayMainText id=\"display\" className={power && \"power\"}>\n        {display}\n      </DisplayMainText>\n    </DisplayBorder>\n  );\n};\n\nexport default Display;\n","export default __webpack_public_path__ + \"static/media/BraunLogo.1334a00a.svg\";","import { css } from \"styled-components\";\n\nexport const embossedText = css`\n  text-shadow: 0px -2px 0px #000, 0px -1px 0px #000, 0px 1px 1px #666;\n`;\nexport const embossedTextSvg = css`\n  -webkit-filter: drop-shadow(0px 1px 1px #666) drop-shadow(0px -2px 0px #000);\n  filter: drop-shadow(0px 1px 1px #666) drop-shadow(0px -2px 0px #000);\n`;\n","import styled from \"styled-components\";\n\nimport braunLogo from \"../media/BraunLogo.svg\";\n\nimport { embossedTextSvg } from \"../styles\";\n\nconst StyledLogo = styled.div`\n  margin-bottom: -8px;\n`;\n\nconst LogoImage = styled.img`\n  ${embossedTextSvg}\n\n  width: 48px;\n  margin-left: 16px;\n`;\n\nconst Logo = () => {\n  return (\n    <StyledLogo>\n      <LogoImage src={braunLogo} alt=\"Logo\" />\n    </StyledLogo>\n  );\n};\n\nexport default Logo;\n","import styled from \"styled-components\";\nimport useStore from \"../../store\";\n\nconst VerticalSwitch = styled.input`\n  ${\"\" /* display: none; */}\n  ${\"\" /* position: relative; */}\n  ${\"\" /* right: 20px; */}\n  opacity: 50;\n  width: 10;\n  height: 10;\n`;\n\nconst VerticalSwitchLabel = styled.label`\n  position: relative;\n  display: block;\n  float: left;\n  overflow: hidden;\n\n  width: 23px;\n  height: 50px;\n  border: 1px solid #000;\n  border-radius: 12px;\n  background: #333;\n\n  cursor: pointer;\n\n  &:before {\n    position: absolute;\n    display: block;\n    width: 23px;\n    height: 50px;\n    border-radius: 11px;\n    background: #2c2e2c;\n    box-shadow: inset 0 2px 5px 1px black;\n    content: \"\";\n    transition: background-position 0.05s ease-in-out;\n  }\n\n  &:focus-within {\n    outline: 1px dotted #212121;\n    outline: 5px auto -webkit-focus-ring-color;\n  }\n`;\n\nconst VerticalSwitchToggle = styled.i`\n  position: absolute;\n  top: 1px;\n  left: 1px;\n  width: 19px;\n  height: 19px;\n  border: 1px solid #111111;\n  border-radius: 50%;\n  background: #3c3d3c;\n  box-shadow: 0 0 7px 2px rgba(0, 0, 0, 0.4);\n  transition: top 0.05s ease-in-out;\n\n  &.checked {\n    top: 28px;\n  }\n\n  ${\"\" /* put a div in here? */}\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst VerticalSwitchToggleHandle = styled.div`\n  height: 3px;\n  width: 50px;\n  background-color: #3c3d3c;\n  box-shadow: 0 0.5px 3px 2px black;\n`;\n\nconst ModeToggle = () => {\n  const sciMode = useStore((state) => state.sciMode);\n  const sciModeOn = useStore((state) => state.sciModeOn);\n  const sciModeOff = useStore((state) => state.sciModeOff);\n\n  const toggleSciMode = (e) => {\n    e.preventDefault();\n    sciMode\n      ? sciModeOff()\n      : sciModeOn();\n  }\n\n  return (\n    <div>\n      <VerticalSwitchLabel\n        htmlFor=\"check\"\n        className={sciMode && \"checked\"}\n        // onClick={sciMode ? sciModeOff : sciModeOn}\n        onClick={toggleSciMode}\n      >\n        <VerticalSwitch type=\"checkbox\" id=\"check\" defaultChecked={sciMode} />\n        <VerticalSwitchToggle className={!sciMode && \"checked\"}>\n          <VerticalSwitchToggleHandle />\n        </VerticalSwitchToggle>\n      </VerticalSwitchLabel>\n    </div>\n  );\n};\n\nexport default ModeToggle;\n","import styled from 'styled-components'\nimport ModeToggle from './ModeToggle';\n\nimport { embossedText, embossedTextSvg } from '../../styles';\n\nconst ModeToggleContainerOuter = styled.div`\n  display: flex;\n  gap: 6px;\n`;\n\nconst Labels = styled.div`\n  top: -2;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 5px 0 6px 0;\n`;\n\nconst Label = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  gap: 8px;\n  font-family: \"AGRegular\";\n`;\n\nconst LabelText = styled.span`\n  ${embossedText}\n  \n  font-size: 12px;\n  color: #DDD;\n`;\n\nconst LabelDot = styled.div`\n  ${embossedTextSvg}\n  \n  width: 3px;\n  height: 3px;\n  border-radius: 50%;\n  border: none;\n  background-color: #DDD;\n`;\n\nconst ModeToggleContainer = () => {\n  return (\n    <ModeToggleContainerOuter>\n      <Labels>\n        <Label>\n          <LabelText>SCI</LabelText>\n          <LabelDot />\n        </Label>\n        <Label>\n          <LabelText>REG</LabelText>\n          <LabelDot />\n        </Label>\n      </Labels>\n      <ModeToggle />\n    </ModeToggleContainerOuter>\n  )\n}\n\nexport default ModeToggleContainer\n","import styled from \"styled-components\";\nimport useStore from \"../../store\";\n\nimport { embossedTextSvg } from \"../../styles\";\n\nconst PowerButtonArea = styled.div`\n  display: flex;\n  width: 48px;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n`;\n\nconst PowerButtonBigDot = styled.div`\n  ${embossedTextSvg}\n  width: 6px;\n  height: 6px;\n  border: 2px solid white;\n  border-radius: 50%;\n\n  &.on {\n    background-color: white;\n  }\n`;\n\nconst StyledPowerButton = styled.button`\n  width: 24px;\n  height: 24px;\n  border: none;\n  border-radius: 50%;\n  cursor: pointer;\n  box-shadow: inset 14px 23px 12px -24px rgba(255, 255, 255, 0.8),\n    1.5px 3px 7px 2px black, 0 0 10px -2px rgba(0, 0, 0, 0.3);\n\n  &:hover {\n    box-shadow: inset 14px 23px 12px -24px rgba(255, 255, 255, 0.8),\n      1.5px 3px 7px 2px black, 0 0 10px -2px rgba(0, 0, 0, 0.3),\n      0 0 15px 0px rgba(255, 255, 255, 0.7);\n  }\n\n  &.on {\n    background-color: rgb(0, 100, 0);\n\n    &:active {\n      border: 0.5px solid black;\n      box-shadow: 1.5px 3px 7px 2px black, 0 0 10px -2px rgba(0, 0, 0, 0.3),\n        0 0 15px 0px rgba(255, 255, 255, 0.7), inset 3px 3px 10px rgba(0, 46, 0, 0.9),\n        inset -3px -3px 10px rgba(110, 186, 110, 0.9);\n    }\n  }\n\n  &.off {\n    background-color: rgb(220, 0, 0);\n\n    &:active {\n      border: 0.5px solid black;\n      box-shadow: 1.5px 3px 7px 2px black, 0 0 10px -2px rgba(0, 0, 0, 0.3),\n        0 0 15px 0px rgba(255, 255, 255, 0.7), inset 3px 3px 10px rgba(56, 0, 0, 0.9),\n        inset -3px -3px 10px rgba(255, 148, 148, 0.9);\n    }\n  }\n`;\n\nconst PowerButton = ({ onoff }) => {\n  const powerOn = useStore((state) => state.powerOn);\n  const powerOff = useStore((state) => state.powerOff);\n\n  return (\n    <PowerButtonArea>\n      <StyledPowerButton\n        onClick={onoff ? powerOn : powerOff}\n        className={onoff ? \"on\" : \"off\"}\n      />\n      <PowerButtonBigDot className={onoff ? \"on\" : \"off\"} />\n    </PowerButtonArea>\n  );\n};\n\nexport default PowerButton;\n","import styled from \"styled-components\";\nimport useStore from \"../../store\";\n\nimport PowerButton from \"./PowerButton\";\n\nconst StyledPowerContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 48px);\n  gap: 16px;\n`;\n\nconst Power = (props) => {\n  const power = useStore(state => state.power)\n  return (\n    <StyledPowerContainer>\n      <PowerButton onoff={true} power={power} />\n      <PowerButton onoff={false} power={power} />\n    </StyledPowerContainer>\n  );\n};\n\nexport default Power;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledSettingsRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n\n  ${'' /* dirty hack: space reg/sci selector centred with button */}\n  ${'' /* better solution: actually center it, make the labels a :before or something */}\n  margin-right: 9px;\n`;\n\nconst SettingsRow = (props) => {\n  return <StyledSettingsRow>{props.children}</StyledSettingsRow>;\n};\n\nexport default SettingsRow;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledModalButton = styled.button`\n  background-color: rgba(255, 255, 255, 0.8);\n  border: 2px solid rgba(0, 0, 0, 0.8);\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  width: 32px;\n  height: 32px;\n  font-size: 16px;\n  border-radius: 50%;\n  font-family: 'Cutive', monospace;\n  cursor: pointer;\n  box-shadow: 0px 2px 2px 0px rgba(0, 0, 0, 0.4);\n\n  &:hover {\n    background-color: rgba(255, 255, 255, 1);\n  }\n`;\n\nconst ModalButton = (props) => {\n  return (\n    <StyledModalButton onClick={props.openModal}><span>i</span></StyledModalButton>\n  );\n};\n\nexport default ModalButton;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst padding = 16;\n\nconst FullScreenModalBackground = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: calc(100% - ${padding * 2}px); /* compensate for padding */\n  height: calc(100% - ${padding * 2}px); /* compensate for padding */\n  padding: ${padding}px;\n  background-color: rgba(0, 0, 0, 0.6);\n  z-index: 10;\n  display: flex;\n  overflow: scroll;\n  /* justify-content: center;\n  align-items: center; */\n`;\n\nconst StyledFullScreenModal = styled.div`\n  margin: auto;\n  border-radius: 8px;\n  background-color: white;\n  display: flex;\n  padding: 16px;\n  overflow: scroll;\n  flex-direction: column;\n  gap: 8px;\n  width: 400px;\n  max-width: 90%;\n`;\n\nconst FullScreenModal = (props) => {\n  return (\n    <FullScreenModalBackground onClick={props.closeModal}>\n      <StyledFullScreenModal onClick={(e) => e.stopPropagation()}>\n        {props.children}\n      </StyledFullScreenModal>\n    </FullScreenModalBackground>\n  );\n};\n\nexport default FullScreenModal;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ModalHeader = styled.h1`\n  font-family: \"AGExtended\";\n  margin-top: 8px;\n  margin-bottom: 16px;\n  ${\"\" /* font-family: \"AGRegular\"; */}\n`;\n\nconst ModalParagraph = styled.div`\n  font-family: \"AGRegular\";\n  margin-top: 8px;\n  margin-bottom: 0px;\n`;\n\nconst ModalTable = styled.table`\n  max-width: 200px;\n  background-color: white;\n  border: 1px solid black;\n  border-collapse: collapse;\n\n  & th {\n    border: 1px solid black;\n    border-bottom: 2px solid black;\n    padding: 4px;\n    font-family: \"AGRegular\";\n  }\n  & td {\n    border: 1px solid black;\n    padding: 4px;\n    font-family: \"AGRegular\";\n  }\n`;\n\nconst ModalCloseButton = styled.button`\n  padding: 8px;\n  margin-top: 8px;\n  font-family: \"AGRegular\";\n  font-size: 16px;\n`;\n\nconst InfoModal = ({ closeModal }) => {\n  return (\n    <>\n      <ModalHeader>Calculator</ModalHeader>\n      <ModalTable>\n        <thead>\n          <tr>\n            <th>Command</th>\n            <th>Shortcut</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>0-9</td>\n            <td>0-9</td>\n          </tr>\n          <tr>\n            <td>+, -, *, /</td>\n            <td>+, -, *, /</td>\n          </tr>\n          <tr>\n            <td>=</td>\n            <td>=, Enter</td>\n          </tr>\n          <tr>\n            <td>CE/C</td>\n            <td>C, Backspace</td>\n          </tr>\n          <tr>\n            <td>sqrt</td>\n            <td>S</td>\n          </tr>\n          <tr>\n            <td>%</td>\n            <td>%, P</td>\n          </tr>\n          <tr>\n            <td>x^-1</td>\n            <td>I</td>\n          </tr>\n          <tr>\n            <td>+/-</td>\n            <td>N</td>\n          </tr>\n          <tr>\n            <td>M+</td>\n            <td>Q</td>\n          </tr>\n          <tr>\n            <td>M-</td>\n            <td>W</td>\n          </tr>\n          <tr>\n            <td>MR</td>\n            <td>E</td>\n          </tr>\n          <tr>\n            <td>MC</td>\n            <td>R</td>\n          </tr>\n        </tbody>\n      </ModalTable>\n      <ModalParagraph>\n        The design of this app is a tribute to the iconic Braun{\" \"}\n        <a href=\"https://www.garmmen.com/static/9420/612cd27c85ba2dd568c2a71c.jpg\">\n          ET 55\n        </a>{\" \"}\n        and <a href=\"http://mycalcdb.free.fr/main.php?l=0&id=166\">ET 66</a>{\" \"}\n        calculators.\n      </ModalParagraph>\n      <ModalParagraph>\n        More information about{\" \"}\n        <a href=\"https://www.reddit.com/r/howto/comments/gs9ad/til_how_to_use_the_memory_functions_on_a/\">\n          how the Memory buttons work\n        </a>\n      </ModalParagraph>\n      <ModalParagraph>\n        Click <a href=\"https://github.com/c-ehrlich/calculator/\">here</a> to see\n        the source code.\n      </ModalParagraph>\n      <ModalCloseButton onClick={closeModal}>close</ModalCloseButton>\n    </>\n  );\n};\n\nexport default InfoModal;\n","import \"./App.css\";\nimport useStore from \"./store\";\nimport styled from \"styled-components\";\nimport GlobalFonts from \"./media/fonts\";\n\nimport Buttons from \"./components/buttons/Buttons\";\nimport Container from \"./components/Container\";\nimport Display from \"./components/display/Display\";\nimport Logo from \"./components/Logo\";\nimport ModeToggleContainer from \"./components/mode/ModeToggleContainer\";\nimport Power from \"./components/power/Power\";\nimport SettingsRow from \"./layout/SettingsRow\";\nimport ModalButton from \"./components/modal/ModalButton\";\nimport FullScreenModal from \"./components/modal/FullScreenModal\";\nimport InfoModal from \"./components/modal/InfoModal\";\n\nconst StyledApp = styled.div`\n  height: 100%;\n`;\n\nfunction App() {\n  const modalOpen = useStore((state) => state.modalOpen);\n  const openModal = useStore((state) => state.openModal);\n  const closeModal = useStore((state) => state.closeModal);\n\n  return (\n    <StyledApp className=\"App\">\n      <GlobalFonts />\n      {modalOpen && (\n        <FullScreenModal closeModal={closeModal}>\n          <InfoModal closeModal={closeModal} />\n        </FullScreenModal>\n      )}\n      {!modalOpen && <ModalButton openModal={openModal} />}\n      \n      <Container>\n        <Logo />\n        <Display />\n        <SettingsRow>\n          <Power />\n          <ModeToggleContainer />\n        </SettingsRow>\n        <Buttons />\n      </Container>\n    </StyledApp>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","/**\n * @function countDecimals\n * counts how many decimal places a number has\n *\n * @param {number} number\n * @returns {number} count of decimal places (int)\n */\nexport const countDecimals = (number) => {\n  if (!number.toString().includes(\".\")) return 0;\n  return Number(number.toString().split(\".\")[1].length);\n};\n\n/**\n * @function getArithmeticCharFromWord\n * inputs a word that represents an arithmetic operation, returns that\n * character for the calculator\n *\n * @param {*} word either 'plus', 'minus', 'times', or 'divideby'\n * @returns {string} either '+', '-', '*', or '/'\n */\nexport const getArithmeticCharFromWord = (word) => {\n  switch (word) {\n    case \"plus\":\n      return \"+\";\n    case \"minus\":\n      return \"-\";\n    case \"times\":\n      return \"*\";\n    case \"divideby\":\n      return \"/\";\n    default:\n      console.log(\"error in getArithmeticCharFromWord. input: \" + word);\n      return \"ERR\";\n  }\n};\n\n/**\n * @function getArithmeticDisplayCharFromWord\n * inputs a word that represents an arithmetic operation, returns the\n * relevant character for the left side of the display\n *\n * @param {*} word either 'plus', 'minus', 'times', or 'divideby'\n * @returns {string} either '+', '-', 'x', or '/'\n */\nexport const getArithmeticDisplayCharFromWord = (word) => {\n  switch (word) {\n    case \"plus\":\n      return \"+\";\n    case \"minus\":\n      return \"-\";\n    case \"times\":\n      return \"x\";\n    case \"divideby\":\n      return \"/\";\n    default:\n      console.log(\"error in getArithmeticDisplayCharFromWord. input: \" + word);\n      return \"ERR\";\n  }\n};\n\n/**\n * @function handleInputClear\n * handles the clear button\n */\nexport const handleInputClear = ({ lastInput }) => {\n  if (lastInput !== \"clear\") {\n    return {\n      inputNum: \"0\",\n      display: \"0\",\n      lastInput: \"clear\",\n    };\n  } else {\n    return {\n      inputNum: \"0\",\n      display: \"0\",\n      lastInput: \"clear\",\n      result: \"0\",\n      displayLeftSide: \"\",\n      currentCalc: \"\",\n      evalString: \"\",\n    };\n  }\n};\n\n/**\n * @function handleInputDecimal\n * Takes a string representation of a number and decides whether or not it's\n * possible to add a decimal point (by checking whether it already has one)\n *\n * @param {string} num\n * @returns {string} num - same number, either with a decimal added to the end or not\n */\nexport const handleInputDecimal = (num) => {\n  // do nothing if we don't want to add a decimal point\n  if (num.length >= 10) return {};\n  if (num.includes(\".\")) return {};\n\n  const returnNum = num + \".\";\n  return {\n    inputNum: returnNum,\n    display: returnNum,\n    lastInput: \"decimal\",\n  };\n};\n\n/**\n * @function handleInputMMinus\n * attempts to subtrate the current input from memory\n */\nexport const handleInputMMinus = ({ inputNum, lastInput, memory, result }) => {\n  const returnValue = processNumberForDisplay(\n    (\n      Number(memory) - Number(lastInput === \"equals\" ? result : inputNum)\n    ).toString()\n  );\n  return {\n    haveMemory: true,\n    memory: returnValue,\n    display: returnValue,\n  };\n};\n\n/**\n * @function handleInputMPlus\n * attempts to add the current input to the memory\n */\nexport const handleInputMPlus = ({ inputNum, lastInput, memory, result }) => {\n  const returnValue = processNumberForDisplay(\n    (\n      Number(memory) + Number(lastInput === \"equals\" ? result : inputNum)\n    ).toString()\n  );\n  return {\n    haveMemory: true,\n    memory: returnValue,\n    display: returnValue,\n  };\n};\n\n/**\n * @function handleInputInverse\n * gives an inverse of either the current input or the result, works\n * in both regular and scientific mode\n */\nexport const handleInputInverse = ({\n  currentCalc,\n  inputNum,\n  lastInput,\n  result,\n}) => {\n  if (lastInput === \"equals\") {\n    const returnValue = processNumberForDisplay(1 / result);\n    return {\n      display: returnValue,\n      result: returnValue,\n    };\n  }\n\n  if (inputNum !== \"\" && inputNum !== \"0\") {\n    const returnValue = processNumberForDisplay(1 / inputNum);\n    return {\n      display: returnValue,\n      inputNum: returnValue,\n      currentCalc: inputNum, // what does this do?\n    };\n  } else {\n    const returnValue = processNumberForDisplay(1 / currentCalc);\n    return {\n      currentCalc: returnValue,\n      display: returnValue,\n    };\n  }\n};\n\n/**\n * @function handleInputNum\n * figures out what to do when the user presses one of the number keys on the calculator\n *\n * @param {*} param0\n * @returns\n */\nexport const handleInputNum = ({ num, inputNum, lastInput }) => {\n  const inputNumNumber = Number(inputNum);\n  let returnValue = \"\";\n\n  switch (true) {\n    case inputNum === \"0\":\n      returnValue = num.toString();\n      break;\n    case inputNum === \"-0\":\n      returnValue = \"-\" + num.toString();\n      break;\n    case inputNumNumber >= 1000000000 || inputNumNumber <= -1000000000:\n      returnValue = inputNum;\n      break;\n    case inputNum[inputNum.length - 1] === \".\":\n      returnValue = inputNum + num;\n      break;\n    case inputNum.includes(\".\"):\n      returnValue = inputNum.length < 11 ? inputNum + num : inputNum;\n      break;\n    default:\n      returnValue = inputNum + num;\n  }\n\n  return {\n    inputNum: returnValue,\n    display: returnValue,\n    lastInput: \"num\",\n    // we need to reset the calculator to initial state if the user inputs a number\n    // right after an equals sign, and we can't do it any earlier than this\n    ...((lastInput === \"equals\" || lastInput === \"percent\") && {\n      result: \"0\",\n      evalString: \"\",\n    }),\n  };\n};\n\n/**\n * @function handleInputPercent\n * Handles the user pressing the % button\n *\n * EXAMPLES:\n * 50 + 80% = 90\n * 50 - 80% = 10\n * 50 * 80% = 40\n * 50 / 80% = 62.5\n *\n * in scientific mode, it first processes the entire remainder of the input string,\n * and then uses the inputNum to get the %\n *\n * ends in a similar result as pressing = (ie inputNum and evalString are\n * \"0\" and \"\", only result is active\n *\n * @param {*} param0\n * @returns\n */\nexport const handleInputPercent = ({ inputNum, evalString, sciModeOn }) => {\n  if (evalString === \"\" || ![\"+\", \"-\", \"*\", \"/\"].includes(evalString.slice(-1)))\n    return {\n      inputNum: \"0\",\n      evalString: \"\",\n      result: \"0\",\n    };\n\n  let evalNum = evalString.slice(0, -1);\n  if (sciModeOn) evalNum = safeEval(evalNum);\n  const evalOperator = evalString.slice(-1);\n\n  let percentNum = \"\";\n  if (evalOperator === \"+\" || evalOperator === \"-\") {\n    percentNum = Number(evalNum) * (Number(inputNum) / 100);\n  } else {\n    // times or divide\n    percentNum = Number(inputNum) / 100;\n  }\n\n  const result = safeEval(evalNum + evalOperator + percentNum.toString());\n\n  return {\n    inputNum: \"0\",\n    evalString: result,\n    result: result,\n    display: result,\n    displayLeftSide: \"\",\n    lastInput: \"percent\",\n  };\n};\n\n/**\n * @function handleInputSqrt\n * handles Square Root input\n */\nexport const handleInputSqrt = ({ inputNum, lastInput, result }) => {\n  if (lastInput === \"equals\" || lastInput === \"percent\") {\n    const returnValue = squareRootCalculationMath(result);\n    return {\n      result: returnValue,\n      display: returnValue,\n    };\n  }\n\n  const returnValue = squareRootCalculationMath(inputNum);\n  if (inputNum !== \"\" && inputNum !== \"0\") {\n    return {\n      inputNum: returnValue,\n      display: returnValue,\n      currentCalc: inputNum, // what does this do?\n    };\n  } else {\n    return {\n      currentCalc: returnValue,\n      display: returnValue,\n    };\n  }\n};\n\n/**\n * @function performArithmeticOperationRegularMode\n * performarms a mathematical function in regular mode\n *\n * @param {*} param0 TODO document this\n * @returns\n */\nexport const performArithmeticOperationRegularMode = ({\n  inputNum,\n  evalString,\n  operationToPerform,\n  lastInput,\n  result,\n}) => {\n  const operator = getArithmeticCharFromWord(operationToPerform);\n  const displayOperator = getArithmeticDisplayCharFromWord(operationToPerform);\n  // if the previous input was already an arithmetic operator, we just update the evalString\n  if ([\"plus\", \"minus\", \"times\", \"divideby\"].includes(lastInput)) {\n    return {\n      evalString: evalString.slice(0, -1).concat(operator),\n      lastInput: operationToPerform,\n      displayLeftSide: displayOperator,\n    };\n  }\n\n  if (lastInput === \"equals\" || lastInput === \"percent\") {\n    return {\n      evalString: result.concat(operator),\n      displayLeftSide: displayOperator,\n    };\n  }\n\n  // calculate new outputs\n  const newResult = processNumberForDisplay(\n    safeEval(evalString.concat(inputNum))\n  );\n  evalString = newResult.concat(operator);\n\n  return {\n    result: newResult,\n    evalString: evalString,\n    inputNum: \"0\",\n    lastInput: operationToPerform,\n    displayLeftSide: displayOperator,\n  };\n};\n\n/**\n * @function performArithmeticOperationSciMode\n * handles input of an arithmetic operation in scientific mode\n */\nexport const performArithmeticOperationSciMode = ({\n  evalString,\n  inputNum,\n  lastInput,\n  operationToPerform,\n}) => {\n  //prettier-ignore\n  const newEvalString =\n    [\"plus\", \"minus\", \"times\", \"divideby\"].includes(lastInput)\n     ? evalString.slice(0, -1).concat(getArithmeticCharFromWord(operationToPerform))\n     : evalString !== \"0\" && evalString +\n       inputNum !== \"0\" && inputNum +\n       getArithmeticCharFromWord(operationToPerform);\n\n  return {\n    evalString: newEvalString,\n    inputNum: \"0\",\n    lastInput: operationToPerform,\n    displayLeftSide: getArithmeticDisplayCharFromWord(operationToPerform),\n    // don't change the display if the last input was also an arithmetic operator\n    ...(![\"plus\", \"minus\", \"times\", \"divideby\"].includes(lastInput) && {display: inputNum})\n  };\n};\n\n/**\n * @function performEqualsRegularMode\n * process the result and other necessary values when the user\n * presses the equals button\n *\n * @param {*} param0\n * @returns\n */\nexport const performEqualsRegularMode = ({\n  inputNum,\n  evalString,\n  lastInput,\n}) => {\n  // pressing equal multiple times doesn't break the calculator\n  if (lastInput === \"equals\") return {};\n\n  const result = processNumberForDisplay(safeEval(evalString.concat(inputNum)));\n  return {\n    result: result,\n    inputNum: \"0\",\n    evalString: \"\",\n    displayLeftSide: \"\",\n    display: result,\n    lastInput: \"equals\",\n  };\n};\n\n/**\n * @function performEqualsSciMode\n * process the result and other necessary values when the calculator is in sci mode\n */\nexport const performEqualsSciMode = ({ evalString, inputNum, lastInput }) => {\n  if (lastInput === \"equals\") return {};\n\n  const result = safeEval(evalString.concat(inputNum));\n\n  return {\n    result: result,\n    display: result,\n    evalString: \"0\",\n    inputNum: \"\",\n    lastInput: \"equals\",\n    displayLeftSide: \"\",\n  };\n};\n\n/**\n * @function processNumberForDisplay\n * takes a string that represents and integer or decimal number, and processes it\n * for display on the calculator screen. this means reducing it to a maximum of\n * 10 digits, not including the decimal point. numbers larger than 99,999,999 return\n * an error, others have their decimal precision reduced if necessary to fit within\n * the 10 characters.\n *\n * @param {*} inputNumString\n * @returns\n */\nexport const processNumberForDisplay = (inputNumString) => {\n  let num = inputNumString.toString().split(\".\")[0];\n  const negativeModifier = num < 0 ? -1 : 0;\n  let decimal = inputNumString.toString().split(\".\")[1] || \"\";\n  if (num.length + negativeModifier > 10) return \"ERR\";\n  if (decimal === \"\") return num;\n  decimal = decimal\n    .slice(0, 11 - (num.length + negativeModifier))\n    .replace(/0+$/g, \"\");\n  return num + \".\" + decimal;\n};\n\n/**\n * @function safeEval\n * a wrapper around eval() to prevent it from doing bad stuff\n * removes everything from the input string that's not a number or arithmetic symbol\n * then runs eval(), and turns that result back into a string before returning it\n *\n * @param {string} inputExpression\n * @returns {string} either the result of the calculation, or \"ERR\"\n */\nexport const safeEval = (inputExpression) => {\n  try {\n    // eslint-disable-next-line no-useless-escape\n    const safeInput = inputExpression.replace(/[^\\d.+\\-\\*\\/]/g, \"\");\n    // eslint-disable-next-line no-eval\n    const safeOutput = processNumberForDisplay(eval(safeInput).toString());\n    return safeOutput;\n  } catch (error) {\n    console.log(error);\n    return \"ERR\";\n  }\n};\n\n/**\n * @function squareRootCalculationMath\n * takes as input a number in string format\n * outputs the square root of that number in string format, already ready\n * for calculator display\n *\n * @param {string} inputNumString\n * @returns {string}\n */\nexport const squareRootCalculationMath = (inputNumString) => {\n  const num = Number(inputNumString);\n  if (num < 0) return \"ERR\";\n  const sqrt = Math.sqrt(num).toString();\n  return processNumberForDisplay(sqrt);\n};\n\n/**\n * @function toggleNegative\n * takes a string that represents a number. if the string represents a positive number\n * this function will return the negative number, and vice versa.\n *\n * @param {string} inputNumString should represent a number\n * @returns {string} the opposite (negative) if the input is a valid number, ERR otherwise\n */\nexport const toggleNegative = ({ inputNum, result, lastInput }) => {\n  // TODO figure out what to do if one of the inputs is ERR (maybe just have a\n  // dedicated function we can call to set the calculator into an error state?)\n\n  // if the result is NOT 0 and the inputNum IS 0, return the negative of the result\n  if (\n    result !== \"0\" &&\n    inputNum === \"0\" &&\n    [\"equals\", \"percent\"].includes(lastInput)\n  ) {\n    const returnValue = processNumberForDisplay(\n      (0 - Number(result)).toString()\n    );\n    return {\n      inputNum: returnValue,\n      display: returnValue,\n      lastInput: \"toggleNegative\",\n    };\n  }\n\n  if (isNaN(inputNum)) {\n    return { display: \"ERR\", inputNum: \"ERR\" };\n  }\n\n  if (inputNum === \"0\") return \"-0\";\n  if (inputNum === \"-0\") return \"0\";\n  const returnValue = processNumberForDisplay(\n    (0 - Number(inputNum)).toString()\n  );\n  return {\n    display: returnValue,\n    inputNum: returnValue,\n    lastInput: \"toggleNegative\",\n  };\n};\n"],"sourceRoot":""}